@model ML.Cine
@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<title>Add Map</title>
<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>



<h3>Google Maps </h3>

<div class="row">
    @using (Html.BeginForm("Form", "Cine", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="col-md-3">
            @Html.LabelFor(model =>model.IdCine, new { @class = "visually-hidden" })
            @Html.TextBoxFor(model=> model.IdCine,new{@class="visually-hidden"})
            @Html.ValidationMessageFor(model => model.IdCine)

        </div>

        <div class="col-md-3">
            @Html.LabelFor(model => model.Nombre)
            @Html.TextBoxFor(model=> model.Nombre , new{id="txtNombre", @class="form-control"})
            @Html.ValidationMessageFor(model => model.Nombre)
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.Direccion)
            @Html.TextBoxFor(model=> model.Direccion, new{  id="txtDireccion",@readonly=true, @class="form-control"})
            @Html.ValidationMessageFor(model => model.Direccion)
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.Venta)
            @Html.TextBoxFor(model=> model.Venta , new{id="txtVenta", @class="form-control"})
            @Html.ValidationMessageFor(model => model.Venta)
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.Zona.IdZona)
            @Html.DropDownListFor(model => model.Zona.IdZona, new SelectList(Model.Zona.Zonas, "IdZona", "Descripcion"), "Selecciona una opcion", new{id="ddlZona", @class = "form-control"})
            @Html.ValidationMessageFor(model => model.Zona.IdZona)
        </div>
        <br>

        <div id="Mapa" style="height: 350px; width: 600px;"></div>
        <br>

        <div class="form-group">
            <div class="col-md-3">
                <input type="submit" value="Save" class="btn btn-success">
                @Html.ActionLink("Regresar", "GetAll", "Cine", htmlAttributes: new { @class = "btn btn-danger" })
            </div>
        </div>
    }

</div>


<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js
">
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCSKBDdPPlfca_zTwyxKiicRQn1qfgRjLw
">
</script>
<script type="application/javascript">
      var map;
      var marker;
      var myLatlng = new google.maps.LatLng(19.428917614425373, -99.16165351867676);
      var geocoder = new google.maps.Geocoder();
      function initialize() {
          var mapOptions = {
          zoom: 13,
          center: myLatlng,
          mapTypeId: google.maps.MapTypeId.ROADMAP
          };
    map = new google.maps.Map(document.getElementById("Mapa"), mapOptions);
        var marker;
            google.maps.event.addListener(map, 'click', function(event) {
            placeMarker(event.latLng);
          });


      function placeMarker(location) {
          if (marker == null)
          {
                marker = new google.maps.Marker({
                  position: location,
                  map: map,
                  zoom:13
                });
          }
          else
          {
              marker.setPosition(location);
          }
          geocoder.geocode(
              { location: location },
              (
                results = google.maps.GeocoderResult,
                status= google.maps.GeocoderStatus
              ) => {
                if (status === "OK") {
                  if (results[0]) {
                console.log  (results[0].address_components);
                 var address_components = results[0].address_components;
                          var components={};
                          jQuery.each(address_components,function(k,v1) {jQuery.each(v1.types,function(k2, v2){components[v2]=v1.long_name});});
                          var city, postal_code,state,country,sublocality,street_number,route;

                          console.log(components);
                          if(components.locality) {
                              city = components.locality;
                          }

                          if(!city) {
                              city = components.administrative_area_level_1;
                          }

                          if(components.postal_code) {
                              postal_code = components.postal_code;
                          }
                          if(components.postal_code) {
                              postal_code = components.postal_code;
                          }

                          if(components.administrative_area_level_1) {
                              state = components.administrative_area_level_1;
                          }

                          if(components.route) {
                              route = components.route;
                          }
                          if(components.sublocality_level_1) {
                              sublocality = components.sublocality_level_1;
                          }
                          if(components.country) {
                              country = components.country;
                          }
                          if(components.street_number) {
                            street_number = components.street_number;
                          }
                          $('#txtDireccion').val(results[0].formatted_address);

                  } else {
                    window.alert("No results found");
                  }
                } else {
                  window.alert("Geocoder failed due to: " + status);
                }
              }
            );
      }

      }
      google.maps.event.addDomListener(window, 'load', initialize);



</script>